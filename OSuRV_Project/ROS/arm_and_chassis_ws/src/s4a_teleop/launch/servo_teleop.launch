<launch>
	<env name="ROSCONSOLE_FORMAT" value="[${severity}][${thread}][${node}/${function}:${line}]: ${message}"/>
	
	
	<include file="$(find s4a_teleop)/launch/jog_teleop.launch"/>
	
	
	<!-- Override that from s4a_moveit_config -->
	<group ns="robot_description_planning">
		<rosparam command="load" file="$(find s4a_teleop)/config/joint_limits_for_servoing.yaml"/>
	</group>
	
	<!-- This node does the servoing calculations -->
	<node
		name="servo_server"
		pkg="moveit_servo"
		type="servo_server"
		output="screen"
	>
		<rosparam command="load" file="$(find s4a_teleop)/config/s4a_servo_server_config.yaml" />
	</node>
	
	<!-- <node
		name="servo_server"
		pkg="s4a_teleop"
		type="pose_tracking_example"
		output="screen"
	>
		<rosparam command="load" file="$(find s4a_teleop)/config/s4a_servo_server_config.yaml" />
			<rosparam command="load" file="$(find s4a_teleop)/config/pose_tracking_settings.yaml" />
	</node> -->
	
	<!-- teleop_tools translates a joystick command into a twist message -->
	<arg name="teleop_config" default="$(find s4a_teleop)/config/joypad_teleop_config.yaml" />
	<rosparam file="$(arg teleop_config)" command="load" />
	<node
		name="joy_teleop"
		pkg="joy_teleop"
		type="joy_teleop.py"
	>
		<!-- Input topics -->
		<remap from="joy" to="/joy" />
		<!-- Output topics: /servo_server/delta_twist_cmds -->
	</node>

</launch>
